use std::str::FromStr;
use crate::parser::ast::{Statement, Tok};

grammar;

pub Statements = Semicolon<Statement>;

Semicolon<T>: Vec<T> = {
    <mut v:(<T> ";")*> <e:T?> => match e {
        None => v,
        Some(stmt) => {
            v.push(stmt);
            v
        }
    },
};

Statement: Box<Statement> = {
    CreateDatabaseStmt,
}

CreateDatabaseStmt: Box<Statement> = {
    CreateDatabaseToken <database_name:Identifier> => Box::new(Statement::CreateDatabase { database_name })
};

CreateDatabaseToken: Tok = {
    "create database" => Tok::CreateDatabase,
    "CREATE DATABASE" => Tok::CreateDatabase,
};

Identifier: String = {
    r"[a-zA-Z_][a-zA-Z_0-9]*" => String::from_str(<>).unwrap(),
};
